# Generated by Django 2.1.7 on 2020-02-07 06:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('comment_counts', '0001_initial'),
        ('user', '0003_auto_20200206_1948'),
        ('open_date_time', '0002_auto_20200206_2139'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceFacilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wifi', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='WIFI')),
                ('parkingLot', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='停车场')),
                ('luggage', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='行李寄存')),
                ('guideService', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='景区讲解')),
                ('wc', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='卫生间')),
                ('smokingArea', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='吸烟区')),
                ('restaurant', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='餐厅')),
                ('atm', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='ATM取款机')),
                ('hotel', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='住宿')),
                ('shop', models.BooleanField(choices=[(0, '无'), (1, '有')], default=0, verbose_name='商店')),
            ],
            options={
                'verbose_name_plural': '服务设施',
                'db_table': 'tourist_attraction_services',
            },
        ),
        migrations.CreateModel(
            name='TouristAttraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='景区名')),
                ('position', models.CharField(max_length=120, verbose_name='位置')),
                ('averageConsumption', models.IntegerField(verbose_name='平均消费')),
                ('description', models.TextField(blank=True, null=True, verbose_name='景区描述')),
                ('ticketInfo', models.TextField(verbose_name='门票信息')),
                ('useTime', models.TextField(blank=True, null=True, verbose_name='用时参考')),
                ('busInfo', models.TextField(blank=True, null=True, verbose_name='交通信息')),
                ('bestTimes', models.TextField(blank=True, null=True, verbose_name='旅游时节')),
                ('tips', models.TextField(blank=True, null=True, verbose_name='游玩贴士')),
                ('commentCount', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comment_counts.CommentCounts', verbose_name='评论统计')),
                ('openDate', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='open_date_time.OpenDate', verbose_name='开放时间')),
                ('services', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='tourist_spots.ServiceFacilities', verbose_name='服务设施')),
            ],
            options={
                'verbose_name': '景区信息',
                'verbose_name_plural': '景区信息',
                'db_table': 'tourist_attraction',
            },
        ),
        migrations.CreateModel(
            name='TouristAttractionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('public_time', models.DateTimeField(auto_now=True, verbose_name='评论时间')),
                ('manner', models.BooleanField(choices=[(0, '好评'), (1, '差评')], default=0, verbose_name='好评or差评')),
                ('isQuality', models.BooleanField(choices=[(0, '是'), (1, '不是')], default=1, verbose_name='是否是优质评论')),
                ('stars', models.DecimalField(blank=True, decimal_places=1, default=5.0, max_digits=2, verbose_name='评分')),
                ('touristAttraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourist_spots.TouristAttraction', verbose_name='景区')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User', verbose_name='发布者')),
            ],
            options={
                'verbose_name': '景区评论',
                'verbose_name_plural': '景区评论',
                'db_table': 'tourist_attraction_comment',
            },
        ),
        migrations.CreateModel(
            name='TouristAttractionCommentImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='图片地址')),
                ('touristAttractionComment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourist_spots.TouristAttractionComment', verbose_name='景区评论')),
            ],
            options={
                'verbose_name': '景区评论配图',
                'verbose_name_plural': '景区评论配图',
                'db_table': 'tourist_attraction_comment_image',
            },
        ),
        migrations.CreateModel(
            name='TouristAttractionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='图片地址')),
                ('touristAttraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourist_spots.TouristAttraction', verbose_name='景区')),
            ],
            options={
                'verbose_name': '景区配图',
                'verbose_name_plural': '景区配图',
                'db_table': 'tourist_attraction_image',
            },
        ),
        migrations.CreateModel(
            name='TouristAttractionTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=36, verbose_name='标签')),
                ('touristAttraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourist_spots.TouristAttraction', verbose_name='景区')),
            ],
            options={
                'verbose_name': '景区标签',
                'verbose_name_plural': '景区标签',
                'db_table': 'tourist_attraction_tag',
            },
        ),
        migrations.CreateModel(
            name='TouristSpot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='景点名')),
                ('position', models.TextField(verbose_name='位置')),
                ('history', models.TextField(blank=True, null=True, verbose_name='建造历史')),
                ('feature', models.TextField(blank=True, null=True, verbose_name='景点特色')),
                ('artistCharm', models.TextField(blank=True, null=True, verbose_name='艺术魅力')),
                ('description', models.TextField(blank=True, null=True, verbose_name='景点描述')),
                ('openDate', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='open_date_time.OpenDate', verbose_name='开放时间')),
                ('touristAttraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourist_spots.TouristAttraction', verbose_name='所属景区')),
            ],
            options={
                'verbose_name': '景点信息',
                'verbose_name_plural': '景点信息',
                'db_table': 'tourist_spot',
            },
        ),
        migrations.CreateModel(
            name='TouristSpotImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='图片地址')),
                ('touristSpot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourist_spots.TouristSpot', verbose_name='景点')),
            ],
            options={
                'verbose_name': '景点配图',
                'verbose_name_plural': '景点配图',
                'db_table': 'tourist_spot_image',
            },
        ),
        migrations.CreateModel(
            name='TouristSpotTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=36, verbose_name='标签')),
                ('touristSpot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourist_spots.TouristSpot', verbose_name='景点')),
            ],
            options={
                'verbose_name': '景点标签',
                'verbose_name_plural': '景点标签',
                'db_table': 'tourist_spot_tag',
            },
        ),
    ]
